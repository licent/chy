<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.WithdrawalMapper">
  <resultMap id="BaseResultMap" type="com.pojo.out.Withdrawal">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="tx_money" jdbcType="DECIMAL" property="txMoney" />
    <result column="bf_money" jdbcType="DECIMAL" property="bfMoney" />
    <result column="after_money" jdbcType="DECIMAL" property="afterMoney" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="tx_type" jdbcType="BIT" property="txType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, tx_money, bf_money, after_money, create_time, tx_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_withdrawal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_withdrawal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.out.Withdrawal">
    insert into t_withdrawal (id, user_id, tx_money, 
      bf_money, after_money, create_time, 
      tx_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{txMoney,jdbcType=DECIMAL}, 
      #{bfMoney,jdbcType=DECIMAL}, #{afterMoney,jdbcType=DECIMAL}, #{createTime,jdbcType=VARCHAR}, 
      #{txType,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.out.Withdrawal">
    insert into t_withdrawal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="txMoney != null">
        tx_money,
      </if>
      <if test="bfMoney != null">
        bf_money,
      </if>
      <if test="afterMoney != null">
        after_money,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="txType != null">
        tx_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="txMoney != null">
        #{txMoney,jdbcType=DECIMAL},
      </if>
      <if test="bfMoney != null">
        #{bfMoney,jdbcType=DECIMAL},
      </if>
      <if test="afterMoney != null">
        #{afterMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="txType != null">
        #{txType,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.out.Withdrawal">
    update t_withdrawal
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="txMoney != null">
        tx_money = #{txMoney,jdbcType=DECIMAL},
      </if>
      <if test="bfMoney != null">
        bf_money = #{bfMoney,jdbcType=DECIMAL},
      </if>
      <if test="afterMoney != null">
        after_money = #{afterMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="txType != null">
        tx_type = #{txType,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.out.Withdrawal">
    update t_withdrawal
    set user_id = #{userId,jdbcType=INTEGER},
      tx_money = #{txMoney,jdbcType=DECIMAL},
      bf_money = #{bfMoney,jdbcType=DECIMAL},
      after_money = #{afterMoney,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=VARCHAR},
      tx_type = #{txType,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>